<?php

namespace App\Models {

/**
 * App\Models\Payment
 *
 * @property integer $id
 * @property integer $merchant_id
 * @property integer $project_id
 * @property boolean $is_valid
 * @property string $type
 * @property string $openid
 * @property string $prepay_id
 * @property string $order_no
 * @property string $trade_no
 * @property string $transaction_id
 * @property string $data
 * @property string $order
 * @property string $payment
 * @property string $refund
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @property-read \App\Models\Merchant $merchant
 * @property-read \App\Models\Project $project
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereMerchantId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereProjectId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereIsValid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereType($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereOpenid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment wherePrepayId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereOrderNo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereTradeNo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereTransactionId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereData($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereOrder($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment wherePayment($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereRefund($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Payment whereUpdatedAt($value)
 * @method static \App\Models\PaymentRepository repository()
 */
	class Payment extends \Eloquent {}


/**
 * PaymentRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method string getSQLByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method int countByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByProjectId($project_id, $limiters = [], $options = [])
 * @method string getSQLByProjectId($project_id, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByProjectId($project_id, $limiters = [], $options = [])
 * @method int countByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsValid($is_valid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsValid($is_valid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsValid($is_valid, $limiters = [], $options = [])
 * @method string getSQLByIsValid($is_valid, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByIsValid($is_valid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByIsValid($is_valid, $limiters = [], $options = [])
 * @method int countByIsValid($is_valid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByType($type, $limiters = [], $options = [])
 * @method string getSQLByType($type, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByType($type, $limiters = [], $options = [])
 * @method int countByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpenid($openid, $limiters = [], $options = [])
 * @method string getSQLByOpenid($openid, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByOpenid($openid, $limiters = [], $options = [])
 * @method int countByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method string getSQLByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method int countByPrepayId($prepay_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOrderNo($order_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOrderNo($order_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOrderNo($order_no, $limiters = [], $options = [])
 * @method string getSQLByOrderNo($order_no, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByOrderNo($order_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByOrderNo($order_no, $limiters = [], $options = [])
 * @method int countByOrderNo($order_no, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTradeNo($trade_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTradeNo($trade_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTradeNo($trade_no, $limiters = [], $options = [])
 * @method string getSQLByTradeNo($trade_no, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByTradeNo($trade_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByTradeNo($trade_no, $limiters = [], $options = [])
 * @method int countByTradeNo($trade_no, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method string getSQLByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method int countByTransactionId($transaction_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByData($data, $limiters = [], $options = [])
 * @method string getSQLByData($data, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByData($data, $limiters = [], $options = [])
 * @method int countByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOrder($order, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOrder($order, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOrder($order, $limiters = [], $options = [])
 * @method string getSQLByOrder($order, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByOrder($order, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByOrder($order, $limiters = [], $options = [])
 * @method int countByOrder($order, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPayment($payment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPayment($payment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPayment($payment, $limiters = [], $options = [])
 * @method string getSQLByPayment($payment, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByPayment($payment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByPayment($payment, $limiters = [], $options = [])
 * @method int countByPayment($payment, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByRefund($refund, $limiters = [], $options = [])
 * @method string getSQLByRefund($refund, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByRefund($refund, $limiters = [], $options = [])
 * @method int countByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Payment findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Payment findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Payment findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Payment retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Payment[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class PaymentRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Project
 *
 * @property array $conf_base_form_design
 * @property integer $id
 * @property string $path
 * @property string $name
 * @property integer $merchant_id
 * @property boolean $is_dating
 * @property boolean $is_enabled
 * @property string $capacity
 * @property string $configs
 * @property \Carbon\Carbon $start_at
 * @property \Carbon\Carbon $end_at
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @property integer $channel_id
 * @property string $rules
 * @property string $use_start_at
 * @property string $use_end_at
 * @property integer $type
 * @property-read \App\Models\Merchant $merchant
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] $players
 * @property-read mixed $capacity_arr
 * @property-read mixed $manage_urls
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project wherePath($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereMerchantId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereIsDating($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereIsEnabled($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereCapacity($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereConfigs($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereStartAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereEndAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereChannelId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereRules($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereUseStartAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereUseEndAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Project whereType($value)
 * @method static \App\Models\ProjectRepository repository()
 */
	class Project extends \Eloquent {}


/**
 * ProjectRepository
 *
 * @property array $conf_base_form_design
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Project findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPath($path, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPath($path, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPath($path, $limiters = [], $options = [])
 * @method string getSQLByPath($path, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByPath($path, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByPath($path, $limiters = [], $options = [])
 * @method int countByPath($path, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByName($name, $limiters = [], $options = [])
 * @method string getSQLByName($name, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByName($name, $limiters = [], $options = [])
 * @method int countByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method string getSQLByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method int countByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsDating($is_dating, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsDating($is_dating, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsDating($is_dating, $limiters = [], $options = [])
 * @method string getSQLByIsDating($is_dating, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByIsDating($is_dating, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByIsDating($is_dating, $limiters = [], $options = [])
 * @method int countByIsDating($is_dating, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method string getSQLByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method int countByIsEnabled($is_enabled, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCapacity($capacity, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCapacity($capacity, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCapacity($capacity, $limiters = [], $options = [])
 * @method string getSQLByCapacity($capacity, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByCapacity($capacity, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByCapacity($capacity, $limiters = [], $options = [])
 * @method int countByCapacity($capacity, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByConfigs($configs, $limiters = [], $options = [])
 * @method string getSQLByConfigs($configs, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByConfigs($configs, $limiters = [], $options = [])
 * @method int countByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStartAt($start_at, $limiters = [], $options = [])
 * @method string getSQLByStartAt($start_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByStartAt($start_at, $limiters = [], $options = [])
 * @method int countByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByEndAt($end_at, $limiters = [], $options = [])
 * @method string getSQLByEndAt($end_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByEndAt($end_at, $limiters = [], $options = [])
 * @method int countByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByChannelId($channel_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByChannelId($channel_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByChannelId($channel_id, $limiters = [], $options = [])
 * @method string getSQLByChannelId($channel_id, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByChannelId($channel_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByChannelId($channel_id, $limiters = [], $options = [])
 * @method int countByChannelId($channel_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByRules($rules, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByRules($rules, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByRules($rules, $limiters = [], $options = [])
 * @method string getSQLByRules($rules, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByRules($rules, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByRules($rules, $limiters = [], $options = [])
 * @method int countByRules($rules, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method string getSQLByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method int countByUseStartAt($use_start_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method string getSQLByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method int countByUseEndAt($use_end_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByType($type, $limiters = [], $options = [])
 * @method string getSQLByType($type, $limiters = [], $options = [])
 * @method \App\Models\Project findOneByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findByType($type, $limiters = [], $options = [])
 * @method int countByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Project findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Project findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Project retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Project[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class ProjectRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Merchant
 *
 * @property boolean $conf_wechat_enable_subscribe_reply
 * @property string $conf_wechat_subscribe_reply
 * @property integer $id
 * @property string $name 客户名称
 * @property string $appid 服务号AppId
 * @property string $refresh_token 服务号RefreshToken
 * @property string $extras 授权信息
 * @property string $pre_auth_code 预授权码
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @property string $deleted_at
 * @property \Carbon\Carbon $pre_auth_code_expire_at
 * @property string $configs
 * @property integer $channel
 * @property boolean $type
 * @property string $mch_key
 * @property integer $channel2
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Wechat\AutoReply[] $valid_auto_replys
 * @property-read \Illuminate\Database\Eloquent\Collection|\App\Models\Wechat\Menu[] $menus
 * @property-read string $pre_auth_url
 * @property-read bool $is_authed
 * @property-read string $status_str
 * @property-read \EasyWeChat\Foundation\Application $wechat_app
 * @property-read \EasyWeChat\Foundation\Application $wechat_certed_app
 * @property-read string $wechat_head_img
 * @property-read string $wechat_qrcode_url
 * @property-read string $wechat_qrcode_text
 * @property-read string $wechat_username
 * @property-read string $wechat_nickname
 * @property-read string $wechat_alias
 * @property-read string $wechat_principal
 * @property-read int $wechat_account_type_id
 * @property-read string $wechat_account_type
 * @property-read \stdClass $wechat_business_info
 * @property-read string $wechat_business_info_str
 * @property-read array $wechat_func_info
 * @property-read string $wechat_func_info_str
 * @property-read mixed $clear_mch_id
 * @property-read mixed $clear_key
 * @property-read mixed $clear_p12
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereAppid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereRefreshToken($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereExtras($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant wherePreAuthCode($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereDeletedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant wherePreAuthCodeExpireAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereConfigs($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereChannel($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereType($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereMchKey($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Merchant whereChannel2($value)
 * @method static \App\Models\MerchantRepository repository()
 */
	class Merchant extends \Eloquent {}


/**
 * MerchantRepository
 *
 * @property boolean $conf_wechat_enable_subscribe_reply
 * @property string $conf_wechat_subscribe_reply
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByName($name, $limiters = [], $options = [])
 * @method string getSQLByName($name, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByName($name, $limiters = [], $options = [])
 * @method int countByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByAppid($appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByAppid($appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByAppid($appid, $limiters = [], $options = [])
 * @method string getSQLByAppid($appid, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByAppid($appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByAppid($appid, $limiters = [], $options = [])
 * @method int countByAppid($appid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method string getSQLByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method int countByRefreshToken($refresh_token, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByExtras($extras, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByExtras($extras, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByExtras($extras, $limiters = [], $options = [])
 * @method string getSQLByExtras($extras, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByExtras($extras, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByExtras($extras, $limiters = [], $options = [])
 * @method int countByExtras($extras, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method string getSQLByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method int countByPreAuthCode($pre_auth_code, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method string getSQLByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method int countByDeletedAt($deleted_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method string getSQLByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method int countByPreAuthCodeExpireAt($pre_auth_code_expire_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByConfigs($configs, $limiters = [], $options = [])
 * @method string getSQLByConfigs($configs, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByConfigs($configs, $limiters = [], $options = [])
 * @method int countByConfigs($configs, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByChannel($channel, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByChannel($channel, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByChannel($channel, $limiters = [], $options = [])
 * @method string getSQLByChannel($channel, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByChannel($channel, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByChannel($channel, $limiters = [], $options = [])
 * @method int countByChannel($channel, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByType($type, $limiters = [], $options = [])
 * @method string getSQLByType($type, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByType($type, $limiters = [], $options = [])
 * @method int countByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByMchKey($mch_key, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByMchKey($mch_key, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByMchKey($mch_key, $limiters = [], $options = [])
 * @method string getSQLByMchKey($mch_key, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByMchKey($mch_key, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByMchKey($mch_key, $limiters = [], $options = [])
 * @method int countByMchKey($mch_key, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByChannel2($channel2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByChannel2($channel2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByChannel2($channel2, $limiters = [], $options = [])
 * @method string getSQLByChannel2($channel2, $limiters = [], $options = [])
 * @method \App\Models\Merchant findOneByChannel2($channel2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findByChannel2($channel2, $limiters = [], $options = [])
 * @method int countByChannel2($channel2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Merchant findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Merchant findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Merchant retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Merchant[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class MerchantRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Channel
 *
 * @property integer $id
 * @property string $name
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Channel whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Channel whereName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Channel whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Channel whereUpdatedAt($value)
 * @method static \App\Models\ChannelRepository repository()
 */
	class Channel extends \Eloquent {}


/**
 * ChannelRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Channel findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByName($name, $limiters = [], $options = [])
 * @method string getSQLByName($name, $limiters = [], $options = [])
 * @method \App\Models\Channel findOneByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] findByName($name, $limiters = [], $options = [])
 * @method int countByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Channel findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Channel findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Channel findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Channel findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Channel retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Channel[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class ChannelRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Cms
 *
 * @property integer $id
 * @property boolean $type 新闻类别
 * @property integer $project_id 项目ID
 * @property string $title 新闻标题
 * @property string $link 新闻链接
 * @property string $pic 新闻图片
 * @property string $video 视频上传
 * @property boolean $status 新闻状态
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereType($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereProjectId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereTitle($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereLink($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms wherePic($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereVideo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereStatus($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Cms whereUpdatedAt($value)
 */
	class Cms extends \Eloquent {}


/**
 * CmsRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByType($type, $limiters = [], $options = [])
 * @method string getSQLByType($type, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByType($type, $limiters = [], $options = [])
 * @method int countByType($type, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByProjectId($project_id, $limiters = [], $options = [])
 * @method string getSQLByProjectId($project_id, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByProjectId($project_id, $limiters = [], $options = [])
 * @method int countByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTitle($title, $limiters = [], $options = [])
 * @method string getSQLByTitle($title, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByTitle($title, $limiters = [], $options = [])
 * @method int countByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByLink($link, $limiters = [], $options = [])
 * @method string getSQLByLink($link, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByLink($link, $limiters = [], $options = [])
 * @method int countByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPic($pic, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPic($pic, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPic($pic, $limiters = [], $options = [])
 * @method string getSQLByPic($pic, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByPic($pic, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByPic($pic, $limiters = [], $options = [])
 * @method int countByPic($pic, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVideo($video, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVideo($video, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVideo($video, $limiters = [], $options = [])
 * @method string getSQLByVideo($video, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByVideo($video, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByVideo($video, $limiters = [], $options = [])
 * @method int countByVideo($video, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStatus($status, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStatus($status, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStatus($status, $limiters = [], $options = [])
 * @method string getSQLByStatus($status, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByStatus($status, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByStatus($status, $limiters = [], $options = [])
 * @method int countByStatus($status, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Cms findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Cms findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Cms findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Cms retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Cms[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class CmsRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\VoteLog
 *
 * @property integer $id
 * @property integer $project_id 项目ID
 * @property integer $merchant_id 客户ID
 * @property integer $player_id 选手ID
 * @property integer $operator_uid 操作者
 * @property string $ip 来源IP
 * @property string $phone 来源Phone
 * @property string $openid 来源OpenID
 * @property string $field 字段
 * @property integer $incr 增量
 * @property string $note 备注
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @property string $wx_name
 * @property string $target_name
 * @property string $opt1
 * @property string $opt2
 * @property string $opt3
 * @property-read \App\Models\Project $project
 * @property-read \App\Models\Player $player
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereProjectId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereMerchantId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog wherePlayerId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereOperatorUid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereIp($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog wherePhone($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereOpenid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereField($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereIncr($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereNote($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereWxName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereTargetName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereOpt1($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereOpt2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\VoteLog whereOpt3($value)
 * @method static \App\Models\VoteLogRepository repository()
 */
	class VoteLog extends \Eloquent {}


/**
 * VoteLogRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByProjectId($project_id, $limiters = [], $options = [])
 * @method string getSQLByProjectId($project_id, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByProjectId($project_id, $limiters = [], $options = [])
 * @method int countByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method string getSQLByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method int countByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPlayerId($player_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPlayerId($player_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPlayerId($player_id, $limiters = [], $options = [])
 * @method string getSQLByPlayerId($player_id, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByPlayerId($player_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByPlayerId($player_id, $limiters = [], $options = [])
 * @method int countByPlayerId($player_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method string getSQLByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method int countByOperatorUid($operator_uid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIp($ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIp($ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIp($ip, $limiters = [], $options = [])
 * @method string getSQLByIp($ip, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByIp($ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByIp($ip, $limiters = [], $options = [])
 * @method int countByIp($ip, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPhone($phone, $limiters = [], $options = [])
 * @method string getSQLByPhone($phone, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByPhone($phone, $limiters = [], $options = [])
 * @method int countByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpenid($openid, $limiters = [], $options = [])
 * @method string getSQLByOpenid($openid, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByOpenid($openid, $limiters = [], $options = [])
 * @method int countByOpenid($openid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByField($field, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByField($field, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByField($field, $limiters = [], $options = [])
 * @method string getSQLByField($field, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByField($field, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByField($field, $limiters = [], $options = [])
 * @method int countByField($field, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIncr($incr, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIncr($incr, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIncr($incr, $limiters = [], $options = [])
 * @method string getSQLByIncr($incr, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByIncr($incr, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByIncr($incr, $limiters = [], $options = [])
 * @method int countByIncr($incr, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByNote($note, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByNote($note, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByNote($note, $limiters = [], $options = [])
 * @method string getSQLByNote($note, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByNote($note, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByNote($note, $limiters = [], $options = [])
 * @method int countByNote($note, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxName($wx_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxName($wx_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxName($wx_name, $limiters = [], $options = [])
 * @method string getSQLByWxName($wx_name, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByWxName($wx_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByWxName($wx_name, $limiters = [], $options = [])
 * @method int countByWxName($wx_name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTargetName($target_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTargetName($target_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTargetName($target_name, $limiters = [], $options = [])
 * @method string getSQLByTargetName($target_name, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByTargetName($target_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByTargetName($target_name, $limiters = [], $options = [])
 * @method int countByTargetName($target_name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpt1($opt1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpt1($opt1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpt1($opt1, $limiters = [], $options = [])
 * @method string getSQLByOpt1($opt1, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByOpt1($opt1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByOpt1($opt1, $limiters = [], $options = [])
 * @method int countByOpt1($opt1, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpt2($opt2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpt2($opt2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpt2($opt2, $limiters = [], $options = [])
 * @method string getSQLByOpt2($opt2, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByOpt2($opt2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByOpt2($opt2, $limiters = [], $options = [])
 * @method int countByOpt2($opt2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpt3($opt3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpt3($opt3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpt3($opt3, $limiters = [], $options = [])
 * @method string getSQLByOpt3($opt3, $limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneByOpt3($opt3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findByOpt3($opt3, $limiters = [], $options = [])
 * @method int countByOpt3($opt3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\VoteLog findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getFakeLogPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getFakeLogQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getFakeLogQueryBuilder($limiters = [], $options = [])
 * @method string getFakeLogSQL($limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneFakeLog($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findFakeLog($limiters = [], $options = [])
 * @method int countFakeLog($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getRealLogPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getRealLogQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getRealLogQueryBuilder($limiters = [], $options = [])
 * @method string getRealLogSQL($limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneRealLog($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findRealLog($limiters = [], $options = [])
 * @method int countRealLog($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\VoteLog findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\VoteLog retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\VoteLog[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class VoteLogRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\CommonVoteOption
 *
 * @property integer $id
 * @property integer $vote_id
 * @property string $vote_num
 * @property string $name
 * @property string $link
 * @property string $img
 * @property string $img2
 * @property string $img3
 * @property string $img4
 * @property string $img5
 * @property string $img6
 * @property string $img7
 * @property string $img8
 * @property string $img9
 * @property string $img10
 * @property integer $vote_amount
 * @property integer $real_vote_amount
 * @property integer $visual_vote_amount
 * @property integer $is_open
 * @property integer $is_del
 * @property string $phone
 * @property string $email
 * @property integer $age
 * @property string $qq
 * @property string $birthday
 * @property string $jiguan
 * @property string $height
 * @property string $xizuo
 * @property string $good_at
 * @property string $job
 * @property string $xuanyan
 * @property string $other1
 * @property string $other2
 * @property string $other3
 * @property string $other4
 * @property string $other5
 * @property string $other6
 * @property integer $other7
 * @property string $description
 * @property string $description2
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereVoteId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereVoteNum($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereLink($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg3($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg4($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg5($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg6($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg7($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg8($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg9($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereImg10($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereVoteAmount($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereRealVoteAmount($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereVisualVoteAmount($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereIsOpen($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereIsDel($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption wherePhone($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereEmail($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereAge($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereQq($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereBirthday($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereJiguan($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereHeight($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereXizuo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereGoodAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereJob($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereXuanyan($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther1($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther3($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther4($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther5($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther6($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereOther7($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereDescription($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereDescription2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVoteOption whereUpdatedAt($value)
 */
	class CommonVoteOption extends \Eloquent {}


/**
 * CommonVoteOptionRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVoteId($vote_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVoteId($vote_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVoteId($vote_id, $limiters = [], $options = [])
 * @method string getSQLByVoteId($vote_id, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByVoteId($vote_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByVoteId($vote_id, $limiters = [], $options = [])
 * @method int countByVoteId($vote_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVoteNum($vote_num, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVoteNum($vote_num, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVoteNum($vote_num, $limiters = [], $options = [])
 * @method string getSQLByVoteNum($vote_num, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByVoteNum($vote_num, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByVoteNum($vote_num, $limiters = [], $options = [])
 * @method int countByVoteNum($vote_num, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByName($name, $limiters = [], $options = [])
 * @method string getSQLByName($name, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByName($name, $limiters = [], $options = [])
 * @method int countByName($name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByLink($link, $limiters = [], $options = [])
 * @method string getSQLByLink($link, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByLink($link, $limiters = [], $options = [])
 * @method int countByLink($link, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg($img, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg($img, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg($img, $limiters = [], $options = [])
 * @method string getSQLByImg($img, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg($img, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg($img, $limiters = [], $options = [])
 * @method int countByImg($img, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg2($img2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg2($img2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg2($img2, $limiters = [], $options = [])
 * @method string getSQLByImg2($img2, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg2($img2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg2($img2, $limiters = [], $options = [])
 * @method int countByImg2($img2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg3($img3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg3($img3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg3($img3, $limiters = [], $options = [])
 * @method string getSQLByImg3($img3, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg3($img3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg3($img3, $limiters = [], $options = [])
 * @method int countByImg3($img3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg4($img4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg4($img4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg4($img4, $limiters = [], $options = [])
 * @method string getSQLByImg4($img4, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg4($img4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg4($img4, $limiters = [], $options = [])
 * @method int countByImg4($img4, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg5($img5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg5($img5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg5($img5, $limiters = [], $options = [])
 * @method string getSQLByImg5($img5, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg5($img5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg5($img5, $limiters = [], $options = [])
 * @method int countByImg5($img5, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg6($img6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg6($img6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg6($img6, $limiters = [], $options = [])
 * @method string getSQLByImg6($img6, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg6($img6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg6($img6, $limiters = [], $options = [])
 * @method int countByImg6($img6, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg7($img7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg7($img7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg7($img7, $limiters = [], $options = [])
 * @method string getSQLByImg7($img7, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg7($img7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg7($img7, $limiters = [], $options = [])
 * @method int countByImg7($img7, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg8($img8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg8($img8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg8($img8, $limiters = [], $options = [])
 * @method string getSQLByImg8($img8, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg8($img8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg8($img8, $limiters = [], $options = [])
 * @method int countByImg8($img8, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg9($img9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg9($img9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg9($img9, $limiters = [], $options = [])
 * @method string getSQLByImg9($img9, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg9($img9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg9($img9, $limiters = [], $options = [])
 * @method int countByImg9($img9, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByImg10($img10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByImg10($img10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByImg10($img10, $limiters = [], $options = [])
 * @method string getSQLByImg10($img10, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByImg10($img10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByImg10($img10, $limiters = [], $options = [])
 * @method int countByImg10($img10, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method string getSQLByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method int countByVoteAmount($vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method string getSQLByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method int countByRealVoteAmount($real_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method string getSQLByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method int countByVisualVoteAmount($visual_vote_amount, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsOpen($is_open, $limiters = [], $options = [])
 * @method string getSQLByIsOpen($is_open, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByIsOpen($is_open, $limiters = [], $options = [])
 * @method int countByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsDel($is_del, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsDel($is_del, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsDel($is_del, $limiters = [], $options = [])
 * @method string getSQLByIsDel($is_del, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByIsDel($is_del, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByIsDel($is_del, $limiters = [], $options = [])
 * @method int countByIsDel($is_del, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPhone($phone, $limiters = [], $options = [])
 * @method string getSQLByPhone($phone, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByPhone($phone, $limiters = [], $options = [])
 * @method int countByPhone($phone, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByEmail($email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByEmail($email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByEmail($email, $limiters = [], $options = [])
 * @method string getSQLByEmail($email, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByEmail($email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByEmail($email, $limiters = [], $options = [])
 * @method int countByEmail($email, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByAge($age, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByAge($age, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByAge($age, $limiters = [], $options = [])
 * @method string getSQLByAge($age, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByAge($age, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByAge($age, $limiters = [], $options = [])
 * @method int countByAge($age, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByQq($qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByQq($qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByQq($qq, $limiters = [], $options = [])
 * @method string getSQLByQq($qq, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByQq($qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByQq($qq, $limiters = [], $options = [])
 * @method int countByQq($qq, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBirthday($birthday, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBirthday($birthday, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBirthday($birthday, $limiters = [], $options = [])
 * @method string getSQLByBirthday($birthday, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByBirthday($birthday, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByBirthday($birthday, $limiters = [], $options = [])
 * @method int countByBirthday($birthday, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByJiguan($jiguan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByJiguan($jiguan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByJiguan($jiguan, $limiters = [], $options = [])
 * @method string getSQLByJiguan($jiguan, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByJiguan($jiguan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByJiguan($jiguan, $limiters = [], $options = [])
 * @method int countByJiguan($jiguan, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByHeight($height, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByHeight($height, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByHeight($height, $limiters = [], $options = [])
 * @method string getSQLByHeight($height, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByHeight($height, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByHeight($height, $limiters = [], $options = [])
 * @method int countByHeight($height, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByXizuo($xizuo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByXizuo($xizuo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByXizuo($xizuo, $limiters = [], $options = [])
 * @method string getSQLByXizuo($xizuo, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByXizuo($xizuo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByXizuo($xizuo, $limiters = [], $options = [])
 * @method int countByXizuo($xizuo, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByGoodAt($good_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByGoodAt($good_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByGoodAt($good_at, $limiters = [], $options = [])
 * @method string getSQLByGoodAt($good_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByGoodAt($good_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByGoodAt($good_at, $limiters = [], $options = [])
 * @method int countByGoodAt($good_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByJob($job, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByJob($job, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByJob($job, $limiters = [], $options = [])
 * @method string getSQLByJob($job, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByJob($job, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByJob($job, $limiters = [], $options = [])
 * @method int countByJob($job, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method string getSQLByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method int countByXuanyan($xuanyan, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther1($other1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther1($other1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther1($other1, $limiters = [], $options = [])
 * @method string getSQLByOther1($other1, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther1($other1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther1($other1, $limiters = [], $options = [])
 * @method int countByOther1($other1, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther2($other2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther2($other2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther2($other2, $limiters = [], $options = [])
 * @method string getSQLByOther2($other2, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther2($other2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther2($other2, $limiters = [], $options = [])
 * @method int countByOther2($other2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther3($other3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther3($other3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther3($other3, $limiters = [], $options = [])
 * @method string getSQLByOther3($other3, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther3($other3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther3($other3, $limiters = [], $options = [])
 * @method int countByOther3($other3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther4($other4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther4($other4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther4($other4, $limiters = [], $options = [])
 * @method string getSQLByOther4($other4, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther4($other4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther4($other4, $limiters = [], $options = [])
 * @method int countByOther4($other4, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther5($other5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther5($other5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther5($other5, $limiters = [], $options = [])
 * @method string getSQLByOther5($other5, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther5($other5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther5($other5, $limiters = [], $options = [])
 * @method int countByOther5($other5, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther6($other6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther6($other6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther6($other6, $limiters = [], $options = [])
 * @method string getSQLByOther6($other6, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther6($other6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther6($other6, $limiters = [], $options = [])
 * @method int countByOther6($other6, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOther7($other7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOther7($other7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOther7($other7, $limiters = [], $options = [])
 * @method string getSQLByOther7($other7, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByOther7($other7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByOther7($other7, $limiters = [], $options = [])
 * @method int countByOther7($other7, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByDescription($description, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByDescription($description, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByDescription($description, $limiters = [], $options = [])
 * @method string getSQLByDescription($description, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByDescription($description, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByDescription($description, $limiters = [], $options = [])
 * @method int countByDescription($description, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByDescription2($description2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByDescription2($description2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByDescription2($description2, $limiters = [], $options = [])
 * @method string getSQLByDescription2($description2, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByDescription2($description2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByDescription2($description2, $limiters = [], $options = [])
 * @method int countByDescription2($description2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\CommonVoteOption retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVoteOption[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class CommonVoteOptionRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Billing
 *
 * @property integer $id
 * @property integer $project_id
 * @property string $dateline
 * @property string $data
 * @property string $billings
 * @property string $payed
 * @property string $refund
 * @property string $hongbao_refund
 * @property string $tax
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereProjectId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereDateline($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereData($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereBillings($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing wherePayed($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereRefund($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereHongbaoRefund($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereTax($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Billing whereUpdatedAt($value)
 * @method static \App\Models\BillingRepository repository()
 */
	class Billing extends \Eloquent {}


/**
 * BillingRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByProjectId($project_id, $limiters = [], $options = [])
 * @method string getSQLByProjectId($project_id, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByProjectId($project_id, $limiters = [], $options = [])
 * @method int countByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByDateline($dateline, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByDateline($dateline, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByDateline($dateline, $limiters = [], $options = [])
 * @method string getSQLByDateline($dateline, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByDateline($dateline, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByDateline($dateline, $limiters = [], $options = [])
 * @method int countByDateline($dateline, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByData($data, $limiters = [], $options = [])
 * @method string getSQLByData($data, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByData($data, $limiters = [], $options = [])
 * @method int countByData($data, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBillings($billings, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBillings($billings, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBillings($billings, $limiters = [], $options = [])
 * @method string getSQLByBillings($billings, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByBillings($billings, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByBillings($billings, $limiters = [], $options = [])
 * @method int countByBillings($billings, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByPayed($payed, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByPayed($payed, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByPayed($payed, $limiters = [], $options = [])
 * @method string getSQLByPayed($payed, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByPayed($payed, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByPayed($payed, $limiters = [], $options = [])
 * @method int countByPayed($payed, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByRefund($refund, $limiters = [], $options = [])
 * @method string getSQLByRefund($refund, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByRefund($refund, $limiters = [], $options = [])
 * @method int countByRefund($refund, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method string getSQLByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method int countByHongbaoRefund($hongbao_refund, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTax($tax, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTax($tax, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTax($tax, $limiters = [], $options = [])
 * @method string getSQLByTax($tax, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByTax($tax, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByTax($tax, $limiters = [], $options = [])
 * @method int countByTax($tax, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Billing findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Billing findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Billing findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Billing retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Billing[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class BillingRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\CommonVote
 *
 * @property integer $id
 * @property string $admin_title
 * @property string $title
 * @property string $start_at
 * @property string $end_at
 * @property integer $is_open
 * @property integer $is_multiple
 * @property integer $is_captcha
 * @property integer $is_login
 * @property string $single_user_limit
 * @property integer $is_limit_ip
 * @property string $single_ip_limit
 * @property integer $forbid_company_ip
 * @property integer $is_bind_mobile
 * @property integer $is_sms
 * @property integer $is_weixin
 * @property integer $is_need_register
 * @property integer $show_name
 * @property integer $show_sex
 * @property integer $show_mobile
 * @property integer $show_email
 * @property integer $show_address
 * @property integer $show_qq
 * @property integer $order_by
 * @property integer $is_set_top
 * @property string $top_vote_ids
 * @property string $vote_tips
 * @property string $comment
 * @property integer $user_id
 * @property integer $captcha_type
 * @property string $ban_options_ids
 * @property string $ban_from
 * @property string $ban_end
 * @property string $ban_tips
 * @property string $open_time
 * @property string $open_time_tips
 * @property string $department
 * @property string $editor_ids
 * @property string $wx_vote_number
 * @property string $wx_vote_title
 * @property string $wx_vote_play_link
 * @property integer $wx_vote_day_max
 * @property integer $is_vote_limit_one
 * @property string $wx_vote_logo
 * @property string $wx_vote_url
 * @property integer $wx_is_only_logo
 * @property integer $wx_is_only_wj
 * @property integer $wx_is_only_third
 * @property string $wx_vote_gh_ids
 * @property integer $is_weixin_auth
 * @property string $wx_auth_appid
 * @property string $wx_auth_appsecret
 * @property integer $is_lottery
 * @property integer $is_limit_one
 * @property string $lottery_desc
 * @property string $lottery_url
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereAdminTitle($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereTitle($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereStartAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereEndAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsOpen($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsMultiple($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsCaptcha($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsLogin($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereSingleUserLimit($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsLimitIp($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereSingleIpLimit($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereForbidCompanyIp($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsBindMobile($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsSms($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsWeixin($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsNeedRegister($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowName($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowSex($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowMobile($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowEmail($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowAddress($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereShowQq($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereOrderBy($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsSetTop($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereTopVoteIds($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereVoteTips($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereComment($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereUserId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereCaptchaType($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereBanOptionsIds($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereBanFrom($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereBanEnd($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereBanTips($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereOpenTime($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereOpenTimeTips($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereDepartment($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereEditorIds($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteNumber($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteTitle($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVotePlayLink($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteDayMax($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsVoteLimitOne($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteLogo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteUrl($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxIsOnlyLogo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxIsOnlyWj($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxIsOnlyThird($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxVoteGhIds($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsWeixinAuth($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxAuthAppid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereWxAuthAppsecret($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsLottery($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereIsLimitOne($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereLotteryDesc($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereLotteryUrl($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\CommonVote whereUpdatedAt($value)
 */
	class CommonVote extends \Eloquent {}


/**
 * CommonVoteRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method string getSQLByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method int countByAdminTitle($admin_title, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTitle($title, $limiters = [], $options = [])
 * @method string getSQLByTitle($title, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByTitle($title, $limiters = [], $options = [])
 * @method int countByTitle($title, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStartAt($start_at, $limiters = [], $options = [])
 * @method string getSQLByStartAt($start_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByStartAt($start_at, $limiters = [], $options = [])
 * @method int countByStartAt($start_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByEndAt($end_at, $limiters = [], $options = [])
 * @method string getSQLByEndAt($end_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByEndAt($end_at, $limiters = [], $options = [])
 * @method int countByEndAt($end_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsOpen($is_open, $limiters = [], $options = [])
 * @method string getSQLByIsOpen($is_open, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsOpen($is_open, $limiters = [], $options = [])
 * @method int countByIsOpen($is_open, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method string getSQLByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method int countByIsMultiple($is_multiple, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method string getSQLByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method int countByIsCaptcha($is_captcha, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsLogin($is_login, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsLogin($is_login, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsLogin($is_login, $limiters = [], $options = [])
 * @method string getSQLByIsLogin($is_login, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsLogin($is_login, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsLogin($is_login, $limiters = [], $options = [])
 * @method int countByIsLogin($is_login, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method string getSQLBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method int countBySingleUserLimit($single_user_limit, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method string getSQLByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method int countByIsLimitIp($is_limit_ip, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method string getSQLBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method int countBySingleIpLimit($single_ip_limit, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method string getSQLByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method int countByForbidCompanyIp($forbid_company_ip, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method string getSQLByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method int countByIsBindMobile($is_bind_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsSms($is_sms, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsSms($is_sms, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsSms($is_sms, $limiters = [], $options = [])
 * @method string getSQLByIsSms($is_sms, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsSms($is_sms, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsSms($is_sms, $limiters = [], $options = [])
 * @method int countByIsSms($is_sms, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method string getSQLByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method int countByIsWeixin($is_weixin, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method string getSQLByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method int countByIsNeedRegister($is_need_register, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowName($show_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowName($show_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowName($show_name, $limiters = [], $options = [])
 * @method string getSQLByShowName($show_name, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowName($show_name, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowName($show_name, $limiters = [], $options = [])
 * @method int countByShowName($show_name, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowSex($show_sex, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowSex($show_sex, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowSex($show_sex, $limiters = [], $options = [])
 * @method string getSQLByShowSex($show_sex, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowSex($show_sex, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowSex($show_sex, $limiters = [], $options = [])
 * @method int countByShowSex($show_sex, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method string getSQLByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method int countByShowMobile($show_mobile, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowEmail($show_email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowEmail($show_email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowEmail($show_email, $limiters = [], $options = [])
 * @method string getSQLByShowEmail($show_email, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowEmail($show_email, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowEmail($show_email, $limiters = [], $options = [])
 * @method int countByShowEmail($show_email, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowAddress($show_address, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowAddress($show_address, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowAddress($show_address, $limiters = [], $options = [])
 * @method string getSQLByShowAddress($show_address, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowAddress($show_address, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowAddress($show_address, $limiters = [], $options = [])
 * @method int countByShowAddress($show_address, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByShowQq($show_qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByShowQq($show_qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByShowQq($show_qq, $limiters = [], $options = [])
 * @method string getSQLByShowQq($show_qq, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByShowQq($show_qq, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByShowQq($show_qq, $limiters = [], $options = [])
 * @method int countByShowQq($show_qq, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOrderBy($order_by, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOrderBy($order_by, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOrderBy($order_by, $limiters = [], $options = [])
 * @method string getSQLByOrderBy($order_by, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByOrderBy($order_by, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByOrderBy($order_by, $limiters = [], $options = [])
 * @method int countByOrderBy($order_by, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method string getSQLByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method int countByIsSetTop($is_set_top, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method string getSQLByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method int countByTopVoteIds($top_vote_ids, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method string getSQLByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method int countByVoteTips($vote_tips, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByComment($comment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByComment($comment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByComment($comment, $limiters = [], $options = [])
 * @method string getSQLByComment($comment, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByComment($comment, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByComment($comment, $limiters = [], $options = [])
 * @method int countByComment($comment, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUserId($user_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUserId($user_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUserId($user_id, $limiters = [], $options = [])
 * @method string getSQLByUserId($user_id, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByUserId($user_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByUserId($user_id, $limiters = [], $options = [])
 * @method int countByUserId($user_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method string getSQLByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method int countByCaptchaType($captcha_type, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method string getSQLByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method int countByBanOptionsIds($ban_options_ids, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBanFrom($ban_from, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBanFrom($ban_from, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBanFrom($ban_from, $limiters = [], $options = [])
 * @method string getSQLByBanFrom($ban_from, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByBanFrom($ban_from, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByBanFrom($ban_from, $limiters = [], $options = [])
 * @method int countByBanFrom($ban_from, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBanEnd($ban_end, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBanEnd($ban_end, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBanEnd($ban_end, $limiters = [], $options = [])
 * @method string getSQLByBanEnd($ban_end, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByBanEnd($ban_end, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByBanEnd($ban_end, $limiters = [], $options = [])
 * @method int countByBanEnd($ban_end, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByBanTips($ban_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByBanTips($ban_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByBanTips($ban_tips, $limiters = [], $options = [])
 * @method string getSQLByBanTips($ban_tips, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByBanTips($ban_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByBanTips($ban_tips, $limiters = [], $options = [])
 * @method int countByBanTips($ban_tips, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpenTime($open_time, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpenTime($open_time, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpenTime($open_time, $limiters = [], $options = [])
 * @method string getSQLByOpenTime($open_time, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByOpenTime($open_time, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByOpenTime($open_time, $limiters = [], $options = [])
 * @method int countByOpenTime($open_time, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method string getSQLByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method int countByOpenTimeTips($open_time_tips, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByDepartment($department, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByDepartment($department, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByDepartment($department, $limiters = [], $options = [])
 * @method string getSQLByDepartment($department, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByDepartment($department, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByDepartment($department, $limiters = [], $options = [])
 * @method int countByDepartment($department, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method string getSQLByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method int countByEditorIds($editor_ids, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method string getSQLByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method int countByWxVoteNumber($wx_vote_number, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method string getSQLByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method int countByWxVoteTitle($wx_vote_title, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method string getSQLByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method int countByWxVotePlayLink($wx_vote_play_link, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method string getSQLByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method int countByWxVoteDayMax($wx_vote_day_max, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method string getSQLByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method int countByIsVoteLimitOne($is_vote_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method string getSQLByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method int countByWxVoteLogo($wx_vote_logo, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method string getSQLByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method int countByWxVoteUrl($wx_vote_url, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method string getSQLByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method int countByWxIsOnlyLogo($wx_is_only_logo, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method string getSQLByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method int countByWxIsOnlyWj($wx_is_only_wj, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method string getSQLByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method int countByWxIsOnlyThird($wx_is_only_third, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method string getSQLByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method int countByWxVoteGhIds($wx_vote_gh_ids, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method string getSQLByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method int countByIsWeixinAuth($is_weixin_auth, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method string getSQLByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method int countByWxAuthAppid($wx_auth_appid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method string getSQLByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method int countByWxAuthAppsecret($wx_auth_appsecret, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method string getSQLByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method int countByIsLottery($is_lottery, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method string getSQLByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method int countByIsLimitOne($is_limit_one, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method string getSQLByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method int countByLotteryDesc($lottery_desc, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method string getSQLByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method int countByLotteryUrl($lottery_url, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\CommonVote findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\CommonVote findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\CommonVote retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\CommonVote[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class CommonVoteRepository extends \Wanjia\Common\Database\Repository {}


/**
 * App\Models\Player
 *
 * @property integer $id
 * @property integer $project_id 项目ID
 * @property integer $merchant_id 客户ID
 * @property string $uniqid 唯一识别码
 * @property string $info 用户信息
 * @property string $str1 预留字符型字段1
 * @property string $str2 预留字符型字段2
 * @property string $str3 预留字符型字段3
 * @property string $str4 预留字符型字段4
 * @property string $str5 预留字符型字段5
 * @property integer $int1 预留数字型字段1
 * @property integer $int2 预留数字型字段2
 * @property integer $int3 预留数字型字段3
 * @property integer $int4 预留数字型字段4
 * @property integer $int5 预留数字型字段5
 * @property \Carbon\Carbon $created_at
 * @property \Carbon\Carbon $updated_at
 * @property integer $vote1
 * @property integer $vote2
 * @property integer $vote3
 * @property integer $checked 是否通过验证
 * @property string $ticket_no 编号
 * @property string $str6 预留字符型字段6
 * @property string $str7 预留字符型字段7
 * @property string $str8 预留字符型字段8
 * @property string $str9 预留字符型字段9
 * @property string $str10 预留字符型字段10
 * @property-read \App\Models\Project $project
 * @property-read \App\Models\Merchant $merchant
 * @property-read array $form_design
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereProjectId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereMerchantId($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereUniqid($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInfo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr1($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr3($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr4($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr5($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInt1($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInt2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInt3($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInt4($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereInt5($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereCreatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereUpdatedAt($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereVote1($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereVote2($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereVote3($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereChecked($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereTicketNo($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr6($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr7($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr8($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr9($value)
 * @method static \Illuminate\Database\Query\Builder|\App\Models\Player whereStr10($value)
 * @method static \App\Models\PlayerRepository repository()
 */
	class Player extends \Eloquent {}


/**
 * PlayerRepository
 *
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderById($id, $limiters = [], $options = [])
 * @method string getSQLById($id, $limiters = [], $options = [])
 * @method \App\Models\Player findOneById($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findById($id, $limiters = [], $options = [])
 * @method int countById($id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByProjectId($project_id, $limiters = [], $options = [])
 * @method string getSQLByProjectId($project_id, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByProjectId($project_id, $limiters = [], $options = [])
 * @method int countByProjectId($project_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method string getSQLByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method int countByMerchantId($merchant_id, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUniqid($uniqid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUniqid($uniqid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUniqid($uniqid, $limiters = [], $options = [])
 * @method string getSQLByUniqid($uniqid, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByUniqid($uniqid, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByUniqid($uniqid, $limiters = [], $options = [])
 * @method int countByUniqid($uniqid, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInfo($info, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInfo($info, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInfo($info, $limiters = [], $options = [])
 * @method string getSQLByInfo($info, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInfo($info, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInfo($info, $limiters = [], $options = [])
 * @method int countByInfo($info, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr1($str1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr1($str1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr1($str1, $limiters = [], $options = [])
 * @method string getSQLByStr1($str1, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr1($str1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr1($str1, $limiters = [], $options = [])
 * @method int countByStr1($str1, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr2($str2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr2($str2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr2($str2, $limiters = [], $options = [])
 * @method string getSQLByStr2($str2, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr2($str2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr2($str2, $limiters = [], $options = [])
 * @method int countByStr2($str2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr3($str3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr3($str3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr3($str3, $limiters = [], $options = [])
 * @method string getSQLByStr3($str3, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr3($str3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr3($str3, $limiters = [], $options = [])
 * @method int countByStr3($str3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr4($str4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr4($str4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr4($str4, $limiters = [], $options = [])
 * @method string getSQLByStr4($str4, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr4($str4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr4($str4, $limiters = [], $options = [])
 * @method int countByStr4($str4, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr5($str5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr5($str5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr5($str5, $limiters = [], $options = [])
 * @method string getSQLByStr5($str5, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr5($str5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr5($str5, $limiters = [], $options = [])
 * @method int countByStr5($str5, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInt1($int1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInt1($int1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInt1($int1, $limiters = [], $options = [])
 * @method string getSQLByInt1($int1, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInt1($int1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInt1($int1, $limiters = [], $options = [])
 * @method int countByInt1($int1, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInt2($int2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInt2($int2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInt2($int2, $limiters = [], $options = [])
 * @method string getSQLByInt2($int2, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInt2($int2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInt2($int2, $limiters = [], $options = [])
 * @method int countByInt2($int2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInt3($int3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInt3($int3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInt3($int3, $limiters = [], $options = [])
 * @method string getSQLByInt3($int3, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInt3($int3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInt3($int3, $limiters = [], $options = [])
 * @method int countByInt3($int3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInt4($int4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInt4($int4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInt4($int4, $limiters = [], $options = [])
 * @method string getSQLByInt4($int4, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInt4($int4, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInt4($int4, $limiters = [], $options = [])
 * @method int countByInt4($int4, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByInt5($int5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByInt5($int5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByInt5($int5, $limiters = [], $options = [])
 * @method string getSQLByInt5($int5, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByInt5($int5, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByInt5($int5, $limiters = [], $options = [])
 * @method int countByInt5($int5, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByCreatedAt($created_at, $limiters = [], $options = [])
 * @method string getSQLByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByCreatedAt($created_at, $limiters = [], $options = [])
 * @method int countByCreatedAt($created_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method string getSQLByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method int countByUpdatedAt($updated_at, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVote1($vote1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVote1($vote1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVote1($vote1, $limiters = [], $options = [])
 * @method string getSQLByVote1($vote1, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByVote1($vote1, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByVote1($vote1, $limiters = [], $options = [])
 * @method int countByVote1($vote1, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVote2($vote2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVote2($vote2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVote2($vote2, $limiters = [], $options = [])
 * @method string getSQLByVote2($vote2, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByVote2($vote2, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByVote2($vote2, $limiters = [], $options = [])
 * @method int countByVote2($vote2, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByVote3($vote3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByVote3($vote3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByVote3($vote3, $limiters = [], $options = [])
 * @method string getSQLByVote3($vote3, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByVote3($vote3, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByVote3($vote3, $limiters = [], $options = [])
 * @method int countByVote3($vote3, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByChecked($checked, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByChecked($checked, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByChecked($checked, $limiters = [], $options = [])
 * @method string getSQLByChecked($checked, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByChecked($checked, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByChecked($checked, $limiters = [], $options = [])
 * @method int countByChecked($checked, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method string getSQLByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method int countByTicketNo($ticket_no, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr6($str6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr6($str6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr6($str6, $limiters = [], $options = [])
 * @method string getSQLByStr6($str6, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr6($str6, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr6($str6, $limiters = [], $options = [])
 * @method int countByStr6($str6, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr7($str7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr7($str7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr7($str7, $limiters = [], $options = [])
 * @method string getSQLByStr7($str7, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr7($str7, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr7($str7, $limiters = [], $options = [])
 * @method int countByStr7($str7, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr8($str8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr8($str8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr8($str8, $limiters = [], $options = [])
 * @method string getSQLByStr8($str8, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr8($str8, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr8($str8, $limiters = [], $options = [])
 * @method int countByStr8($str8, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr9($str9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr9($str9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr9($str9, $limiters = [], $options = [])
 * @method string getSQLByStr9($str9, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr9($str9, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr9($str9, $limiters = [], $options = [])
 * @method int countByStr9($str9, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerByStr10($str10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryByStr10($str10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderByStr10($str10, $limiters = [], $options = [])
 * @method string getSQLByStr10($str10, $limiters = [], $options = [])
 * @method \App\Models\Player findOneByStr10($str10, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findByStr10($str10, $limiters = [], $options = [])
 * @method int countByStr10($str10, $limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPager($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQuery($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilder($limiters = [], $options = [])
 * @method string getSQL($limiters = [], $options = [])
 * @method \App\Models\Player findOne($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] find($limiters = [], $options = [])
 * @method int count($limiters = [], $options = [])
 * @method \Illuminate\Contracts\Pagination\LengthAwarePaginator getPagerBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Query\Builder getQueryBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Builder getQueryBuilderBy($limiters = [], $options = [])
 * @method string getSQLBy($limiters = [], $options = [])
 * @method \App\Models\Player findOneBy($limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] findBy($limiters = [], $options = [])
 * @method int countBy($limiters = [], $options = [])
 * @method \App\Models\Player retrieveByPK($id, $limiters = [], $options = [])
 * @method \Illuminate\Database\Eloquent\Collection|\App\Models\Player[] retrieveByPKs($ids, $limiters = [], $options = [])
 */
	 abstract class PlayerRepository extends \Wanjia\Common\Database\Repository {}

}