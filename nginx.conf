worker_processes  2;
user www-data www-data;

events {
    worker_connections  102400;
}


http {


    map $uri $loggable {
        ~.+[.](jpg|jpeg|png|gif|js|css|ico)$ 0;
        ~^/check-live\.php$ 0;
        default 1;
    }

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - - [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$http_user_agent" '
                      '"$host" "$http_x_forwarded_for" $request_time $upstream_response_time';

    access_log  /var/log/nginx/access.log  main if=$loggable;
    error_log   /var/log/nginx/access.err  error;

    lua_package_path '/usr/local/openresty/lualib/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?.lua;/usr/local/openresty/luajit/share/lua/5.1/?/init.lua;/var/www/lualib/?.lua;';
    lua_package_cpath '/usr/local/openresty/lualib/?.so;/usr/local/openresty/luajit/lib/lua/5.1/?.so;/var/www/lualib/?.so';
    lua_need_request_body on;

    sendfile        on;
    keepalive_timeout  65;

    gzip  off;
    client_max_body_size 105M;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    set_real_ip_from 0.0.0.0/0;
    resolver 114.114.114.114;

    
    server {
        listen       80;
        server_name  localhost;
        root   /var/www/public;

        # Define default params.
        set $lua_code_cache off;
        include /var/www/nginx[.]params;


        location /lua {
            root   /var/www;

            if ($lua_code_cache = 'off') {
                lua_code_cache off;
            }

            default_type "text/html; charset=utf-8";
            content_by_lua_file $request_filename.lua;
        }

        location / {
            index  index.html index.php;
    
            if (-f $request_filename) {
                expires max;
                break;
            }

            rewrite ^/yar/(\w+) /lumen.php last;
            rewrite ^/lumen/(\w+) /lumen.php last;
            rewrite ^/callbacks/weixin_auth$ /lumen.php last;
            rewrite ^/callbacks/app/\w+/event /lumen.php last;
    
            if (-d $request_filename) {
                rewrite ^/(.*)([^/])$ http://$host/$1$2/ permanent;
            }

            if ($request_filename !~ "\.(js|htc|ico|gif|jpg|png|css|php)$") {
                rewrite ^(.+)$ /index.php$1 last;
            }
        }
    
        error_page   404              /404.html;
        error_page   500 502 503 504  /50x.html;
        location = /404.html {
            root   /usr/local/openresty/nginx/html;
        }
        location = /50x.html {
            root   /usr/local/openresty/nginx/html;
        }

        location ~ ^/uploads/.*\.(php)$ {
            return 403;
        }

        location ~ ^/uploads/.*/\..*t\d+(x\d+)?(m?([nafsl](\d+)?)?)?\.jpg$ {
            expires 15d;
            add_header Cache-Control public;

            set $image_uri /thumb.php?file=$uri;

            if (!-f $request_filename) {
               proxy_pass http://127.0.0.1$image_uri;
               break;
            }
        }

        location ~ ^/(?!web)[^/]+/.+[.](?:jpeg|jpg|png|gif|css|js|xml|flv|mp3|mp4|swf|zip|rar|txt|ico)$ {
            try_files $uri /web$uri =404;
        }

        location /uploads {
            expires 15d;
            add_header Cache-Control public;
        }

        location /yar.php {
            allow 127.0.0.0/24;
            allow 60.173.236.97;
            allow 61.132.221.0/24;
            allow 10.9.0.0/24;
            #增加阿里云内外网 IP 端
            deny  all;
        }

        location ~ ^/web/.+\.html$ {
            deny  all;
        }

        location ~ \.php(/|$) {
            fastcgi_pass   unix:/var/run/fpm.sock;
            fastcgi_index  index.php;
            fastcgi_split_path_info ^((?U).+\.php)(/?.+)$;
            include        fastcgi_params;
            fastcgi_param  PATH_INFO          $fastcgi_path_info;
            fastcgi_param  PATH_TRANSLATED    $document_root$fastcgi_path_info;
            fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;
        }


        location ~ /\.ht {
            deny  all;
        }
    }

}

